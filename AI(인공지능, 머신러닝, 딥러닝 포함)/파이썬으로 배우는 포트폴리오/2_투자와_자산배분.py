# -*- coding: utf-8 -*-
"""2.투자와 자산배분.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I0aQwfS52VTSqzWhTljQQYFAqeqU0Nbs
"""

#2.1. 자산배분과 포트폴리오
#코드 없음.(이론설명)

#2.2. 포트폴리오 성과의 결정 요인들

#2.3. 포트폴리오 성과 측정 삼총사
#포트폴리오 성과를 측정하는 3개의 지수는
#(1)샤프지수
#(2)젠센알파지수
#(3)트레이너지수


#2.3.1.샤프지수
#코드없음(이론설명)

#2.3.2.젠센알파지수
#코드없음(이론설명)

#2.3.3.트레이너지수
#코드없음(이론설명)


#2.3.5. 최대낙폭
import numpy as np
np.maximum.accumulate(np.array([11,12,13,20,19,18,17,18,23,21])))
array([11,12,13,20,20,20,20,20,23,23])

#cummax라는 이름의 함수를 선언한다. 이 함수는 nums 매개변수를 받는다.
def cummax(nums):
    #역대 최고값을 저장하기 위한 리스트 cum과 초기 최고값 max를 설정한다.
    cum =[ ]
    max =0

#nums를 순회하면서 item을 현재 최고값과 비교한다.
#item > max 이명 최고값 max를 업데이트 한다.
#그리고 if문의 결과와 상관없이 최고값을 cum에 추가한다.
for item in nums :
    if item>max :
        max = item
    cum.append(max)
return cum